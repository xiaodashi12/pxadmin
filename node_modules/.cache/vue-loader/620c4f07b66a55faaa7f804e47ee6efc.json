{"remainingRequest":"/Users/cjg/Vue/pxadmin/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/cjg/Vue/pxadmin/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cjg/Vue/pxadmin/src/views/Login.vue","mtime":1620530723473},{"path":"/Users/cjg/Vue/pxadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cjg/Vue/pxadmin/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cjg/Vue/pxadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cjg/Vue/pxadmin/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import api from '@/api'\n    import {mapActions} from 'vuex';\n    import {loading} from \"../utils/dialogUtils\";\n    import {getSecuCode} from \"../utils/dialogUtils\";\nimport { getToken, setToken, removeToken, getLocalStorage, setLocalStorage,clearLocalStorage } from '@/utils/auth'\n    import THREE from \"@/utils/three\";\n    var SEPARATION = 100, AMOUNTX = 60, AMOUNTY = 40;\n    var container;\n    var camera, scene, renderer;\n    var particles, particle, count = 0;\n    var mouseX = 0, mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    export default {\n        data() {\n            let validatePwd = (rule, value, callback) => {\n\n                if (value === \"\" || value === undefined) {\n                    callback(new Error(\"请输入密码\"));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                ruleForm: {\n                    userName: \"admin\",\n                    password: \"admin\",\n                    checked: true\n                },\n                rules: {\n                    userName: [\n                        {required: true, message: \"请输入登录名\", trigger: \"blur\"}\n                    ],\n                    password: [{validator: validatePwd, trigger: \"blur\"}]\n                },\n                code: {\n                    isVCode: false,//是否显示验证码\n                    src: ''\n                },\n                rand: 0,\n                error12: 0,\n                loginMsg: '',\n                isShowPwd: false, // 是否显示密码\n                loading: false, // 登录loading\n            };\n        },\n        methods: {\n            ...mapActions([\n                'Login'\n            ]),\n             init() {\n\n\t\t\t\t// container = document.createElement( 'div' );\t//创建容器\n\t\t\t\t// document.body.appendChild( container );\t\t\t//将容器添加到页面上\n                container = document.getElementById( 'container' );\t//创建容器\n\t\t\t\tcamera = new THREE.THREE.PerspectiveCamera( 120, window.innerWidth / window.innerHeight, 1, 1500 );\t\t//创建透视相机设置相机角度大小等\n\t\t\t\tcamera.position.set(0,450,2000);\t\t//设置相机位置\n\n\t\t\t\tscene = new THREE.THREE.Scene();\t\t\t//创建场景\n\t\t\t\tparticles = new Array();\n\n\t\t\t\tvar PI2 = Math.PI * 2;\n\t\t\t\t//设置粒子的大小，颜色位置等\n\t\t\t\tvar material = new THREE.THREE.ParticleCanvasMaterial( {\n\t\t\t\t\tcolor: 0x0f96ff,\n\t\t\t\t\tvertexColors:true,\n\t\t\t\t\tsize: 4,\n\t\t\t\t\tprogram: function ( context ) {\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tcontext.arc( 0, 0, 0.01, 0, PI2, true );\t//画一个圆形。此处可修改大小。\n\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\t//设置长条粒子的大小颜色长度等\n\t\t\t\tvar materialY = new THREE.THREE.ParticleCanvasMaterial( {\n\t\t\t\t\tcolor: 0xffffff,\n\t\t\t\t\tvertexColors:true,\n\t\t\t\t\tsize: 1,\n\t\t\t\t\tprogram: function ( context ) {\n\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\t//绘制渐变色的矩形\n\t\t\t\t\t\tvar lGrd = context.createLinearGradient(-0.008,0.25,0.016,-0.25);\n\t\t\t\t\t\tlGrd.addColorStop(0, '#16eff7');\n\t\t\t\t\t\tlGrd.addColorStop(1, '#0090ff');\n\t\t\t\t\t\tcontext.fillStyle = lGrd;\n\t\t\t\t\t\tcontext.fillRect(-0.008,0.25,0.016,-0.25);  //注意此处的坐标大小\n\t\t\t\t\t\t//绘制底部和顶部圆圈\n\t\t\t\t\t\tcontext.fillStyle = \"#0090ff\";\n\t\t\t\t\t\tcontext.arc(0, 0, 0.008, 0, PI2, true);    //绘制底部圆圈\n\t\t\t\t\t\tcontext.fillStyle = \"#16eff7\";\n\t\t\t\t\t\tcontext.arc(0, 0.25, 0.008, 0, PI2, true);    //绘制顶部圆圈\n\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\tcontext.closePath();\n\t\t\t\t\t\t//绘制顶部渐变色光圈\n\t\t\t\t\t\tvar rGrd = context.createRadialGradient(0, 0.25, 0, 0, 0.25, 0.025);\n\t\t\t\t\t\trGrd.addColorStop(0, 'transparent');\n\t\t\t\t\t\trGrd.addColorStop(1, '#16eff7');\n\t\t\t\t\t\tcontext.fillStyle = rGrd;\n\t\t\t\t\t\tcontext.arc(0, 0.25, 0.025, 0, PI2, true);    //绘制一个圆圈\n\t\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t//循环判断创建随机数选择创建粒子或者粒子条\n\t\t\t\tvar i = 0;\n\t\t\t\tfor ( var ix = 0; ix < AMOUNTX; ix ++ ) {\n\t\t\t\t\tfor ( var iy = 0; iy < AMOUNTY; iy ++ ) {\n\t\t\t\t\t\tvar num = Math.random()-0.1;\n\t\t\t\t\t\tif (num >0 ) {\n\t\t\t\t\t\t\tparticle = particles[ i ++ ] = new THREE.THREE.Particle( material );\n\t\t\t\t\t\t\t// console.log(\"material\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tparticle = particles[ i ++ ] = new THREE.THREE.Particle( materialY );\n\t\t\t\t\t\t\t// console.log(\"materialY\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//particle = particles[ i ++ ] = new THREE.Particle( material );\n\t\t\t\t\t\tparticle.position.x = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 );\n\t\t\t\t\t\tparticle.position.z = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 );\n\t\t\t\t\t\tscene.add( particle );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trenderer = new THREE.THREE.CanvasRenderer();\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\t\t\t\t//document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\t\t\t//document.addEventListener( 'touchstart', onDocumentTouchStart, false );\n\t\t\t\t//document.addEventListener( 'touchmove', onDocumentTouchMove, false );\n\t\t\t\twindow.addEventListener( 'resize', this.onWindowResize, false );\n\t\t\t},\n\n\t\t\t//浏览器大小改变时重新渲染\n\t\t\tonWindowResize() {\n\t\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\t\twindowHalfY = window.innerHeight / 2;\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t},\n             animate() {\n\t\t\t\trequestAnimationFrame( this.animate );\n\t\t\t\tthis.render();\n\t\t\t},\n\n\t\t\t//将相机和场景渲染到页面上\n\t\t\trender() {\n\t\t\t\tvar i = 0;\n\t\t\t\t//更新粒子的位置和大小\n\t\t\t\tfor (var ix = 0; ix < AMOUNTX; ix++) {\n\t\t\t\t\tfor (var iy = 0; iy < AMOUNTY; iy++) {\n\t\t\t\t\t\tparticle = particles[i++];\n\t\t\t\t\t\t//更新粒子位置\n\t\t\t\t\t\tparticle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\n\t\t\t\t\t\t//更新粒子大小\n\t\t\t\t\t\tparticle.scale.x =  particle.scale.y = particle.scale.z  = ( (Math.sin((ix + count) * 0.3) + 1) * 4 + (Math.sin((iy + count) * 0.5) + 1) * 4 )*50;\t//正常情况下再放大100倍*1200\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trenderer.render( scene, camera );\n\t\t\t\tcount += 0.1;\n\t\t\t},\n            handleLogin() {\n                let data = {\n                    code: 200,\n                    msg:'登录成功',\n                    data:{\n                        userName:'admin'\n                    }\n                }\n                setToken('111')\n                setLocalStorage('operatorInfo',data);\n                // this.$router.push('/dashBoard/manage');\n                this.$router.push({\n                    path: '/manage',\n                    query: {\n                        // id: new Date().getTime()\n                    }\n                })\n                // return;\n                // this.$refs[\"ruleForm\"].validate(valid => {\n                //     if (valid) {\n                //         let params = {\n                //             userName: this.ruleForm.userName,\n                //             userPwd: this.ruleForm.password,\n                //         }\n\n                //         this.Login(params).then(res => {\n                //             this.loginMsg = '';\n                //              console.log('res'+res)\n                //            if(getLocalStorage('operatorInfo').code==200){\n                //                 this.$router.push({name: 'DashBoard'});\n                //            }else if(getLocalStorage('operatorInfo').code!=200){\n                //                 this.loginMsg = getLocalStorage('operatorInfo').msg;\n                //                 return;\n                //            }\n                //         }, error => {\n                //             console.log(error)\n                //             this.loginMsg = error.msg;\n                //         });\n                //     } else {\n                //         return false;\n                //     }\n                // });\n            },\n            handleOnRandom() {\n                this.rand += 1;\n            }\n        },\n        mounted() {\n            this.init();\t\t//初始化\n\t\t\tthis.animate();\t//动画效果\n        }\n    };\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"login-container\" id=\"container\"> \n        <div >\n            <div class=\"login-header\"></div>\n            <div class=\"card-box\">\n                <h1>pixiu控制台管理系统</h1>\n                <el-form\n                        class=\"login-form\"\n                        autoComplete=\"on\"\n                        :model=\"ruleForm\"\n                        :rules=\"rules\"\n                        ref=\"ruleForm\"\n                        label-position=\"left\">\n                    <div class=\"login_msg\" v-if=\"loginMsg\">\n                        <i class=\"el-icon-error\"></i>\n                        <p class=\"error\">\n                            {{loginMsg}}\n                        </p>\n                    </div>\n                    <el-form-item prop=\"userName\" class=\"item\">\n                        <el-input\n                                placeholder=\"请输入用户名\"\n                                name=\"userName\"\n                                autoComplete=\"on\"\n                                v-model=\"ruleForm.userName\">\n                            <i slot=\"prefix\" class=\"el-icon-etcyonghuming\"></i>\n                        </el-input>\n                    </el-form-item>\n                    <el-form-item\n                            prop=\"password\"\n                            class=\"item\">\n                        <el-input\n                                placeholder=\"请输入密码\"\n                                name=\"password\"\n                                :type=\"isShowPwd ? 'text' : 'password'\"\n                                @keyup.enter.native=\"handleLogin\"\n                                v-model=\"ruleForm.password\"\n                                autoComplete=\"on\">\n                            <i slot=\"prefix\" class=\"el-icon-etcyonghuming1\"></i>\n                        </el-input>\n                    </el-form-item>\n                    <div class=\"vCode\" v-if=\"code.isVCode\">\n                        <el-form-item\n                                prop=\"verification_code\"\n                                class=\"item\">\n                            <el-input\n                                    placeholder=\"请输入验证码\"\n                                    name=\"app_ver\"\n                                    type=\"text\"\n                                    v-model=\"ruleForm.verification_code\">\n                                <i slot=\"prefix\" class=\"el-icon-etcyanzhengma\"></i>\n                            </el-input>\n                        </el-form-item>\n                        <div id=\"code\" title=\"看不清？换一张～\" @click=\"handleOnRandom\">\n                            <img :src=\"'/issue/captcha?n='+ rand\"/>\n                        </div>\n                    </div>\n\n                    <div>\n                        <el-button type=\"primary\" style=\"width:100%;margin-bottom:30px;\" :loading=\"loading\"\n                                @click.native=\"handleLogin()\">登录\n                        </el-button>\n                    </div>\n                </el-form>\n            </div>\n            <div class=\"login-footer\">\n                技术支持\n            </div>\n        </div>\n        \n    </div>\n</template>\n\n<script>\n    import api from '@/api'\n    import {mapActions} from 'vuex';\n    import {loading} from \"../utils/dialogUtils\";\n    import {getSecuCode} from \"../utils/dialogUtils\";\nimport { getToken, setToken, removeToken, getLocalStorage, setLocalStorage,clearLocalStorage } from '@/utils/auth'\n    import THREE from \"@/utils/three\";\n    var SEPARATION = 100, AMOUNTX = 60, AMOUNTY = 40;\n    var container;\n    var camera, scene, renderer;\n    var particles, particle, count = 0;\n    var mouseX = 0, mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    export default {\n        data() {\n            let validatePwd = (rule, value, callback) => {\n\n                if (value === \"\" || value === undefined) {\n                    callback(new Error(\"请输入密码\"));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                ruleForm: {\n                    userName: \"admin\",\n                    password: \"admin\",\n                    checked: true\n                },\n                rules: {\n                    userName: [\n                        {required: true, message: \"请输入登录名\", trigger: \"blur\"}\n                    ],\n                    password: [{validator: validatePwd, trigger: \"blur\"}]\n                },\n                code: {\n                    isVCode: false,//是否显示验证码\n                    src: ''\n                },\n                rand: 0,\n                error12: 0,\n                loginMsg: '',\n                isShowPwd: false, // 是否显示密码\n                loading: false, // 登录loading\n            };\n        },\n        methods: {\n            ...mapActions([\n                'Login'\n            ]),\n             init() {\n\n\t\t\t\t// container = document.createElement( 'div' );\t//创建容器\n\t\t\t\t// document.body.appendChild( container );\t\t\t//将容器添加到页面上\n                container = document.getElementById( 'container' );\t//创建容器\n\t\t\t\tcamera = new THREE.THREE.PerspectiveCamera( 120, window.innerWidth / window.innerHeight, 1, 1500 );\t\t//创建透视相机设置相机角度大小等\n\t\t\t\tcamera.position.set(0,450,2000);\t\t//设置相机位置\n\n\t\t\t\tscene = new THREE.THREE.Scene();\t\t\t//创建场景\n\t\t\t\tparticles = new Array();\n\n\t\t\t\tvar PI2 = Math.PI * 2;\n\t\t\t\t//设置粒子的大小，颜色位置等\n\t\t\t\tvar material = new THREE.THREE.ParticleCanvasMaterial( {\n\t\t\t\t\tcolor: 0x0f96ff,\n\t\t\t\t\tvertexColors:true,\n\t\t\t\t\tsize: 4,\n\t\t\t\t\tprogram: function ( context ) {\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tcontext.arc( 0, 0, 0.01, 0, PI2, true );\t//画一个圆形。此处可修改大小。\n\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\t//设置长条粒子的大小颜色长度等\n\t\t\t\tvar materialY = new THREE.THREE.ParticleCanvasMaterial( {\n\t\t\t\t\tcolor: 0xffffff,\n\t\t\t\t\tvertexColors:true,\n\t\t\t\t\tsize: 1,\n\t\t\t\t\tprogram: function ( context ) {\n\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\t//绘制渐变色的矩形\n\t\t\t\t\t\tvar lGrd = context.createLinearGradient(-0.008,0.25,0.016,-0.25);\n\t\t\t\t\t\tlGrd.addColorStop(0, '#16eff7');\n\t\t\t\t\t\tlGrd.addColorStop(1, '#0090ff');\n\t\t\t\t\t\tcontext.fillStyle = lGrd;\n\t\t\t\t\t\tcontext.fillRect(-0.008,0.25,0.016,-0.25);  //注意此处的坐标大小\n\t\t\t\t\t\t//绘制底部和顶部圆圈\n\t\t\t\t\t\tcontext.fillStyle = \"#0090ff\";\n\t\t\t\t\t\tcontext.arc(0, 0, 0.008, 0, PI2, true);    //绘制底部圆圈\n\t\t\t\t\t\tcontext.fillStyle = \"#16eff7\";\n\t\t\t\t\t\tcontext.arc(0, 0.25, 0.008, 0, PI2, true);    //绘制顶部圆圈\n\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\tcontext.closePath();\n\t\t\t\t\t\t//绘制顶部渐变色光圈\n\t\t\t\t\t\tvar rGrd = context.createRadialGradient(0, 0.25, 0, 0, 0.25, 0.025);\n\t\t\t\t\t\trGrd.addColorStop(0, 'transparent');\n\t\t\t\t\t\trGrd.addColorStop(1, '#16eff7');\n\t\t\t\t\t\tcontext.fillStyle = rGrd;\n\t\t\t\t\t\tcontext.arc(0, 0.25, 0.025, 0, PI2, true);    //绘制一个圆圈\n\t\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t//循环判断创建随机数选择创建粒子或者粒子条\n\t\t\t\tvar i = 0;\n\t\t\t\tfor ( var ix = 0; ix < AMOUNTX; ix ++ ) {\n\t\t\t\t\tfor ( var iy = 0; iy < AMOUNTY; iy ++ ) {\n\t\t\t\t\t\tvar num = Math.random()-0.1;\n\t\t\t\t\t\tif (num >0 ) {\n\t\t\t\t\t\t\tparticle = particles[ i ++ ] = new THREE.THREE.Particle( material );\n\t\t\t\t\t\t\t// console.log(\"material\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tparticle = particles[ i ++ ] = new THREE.THREE.Particle( materialY );\n\t\t\t\t\t\t\t// console.log(\"materialY\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//particle = particles[ i ++ ] = new THREE.Particle( material );\n\t\t\t\t\t\tparticle.position.x = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 );\n\t\t\t\t\t\tparticle.position.z = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 );\n\t\t\t\t\t\tscene.add( particle );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trenderer = new THREE.THREE.CanvasRenderer();\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\t\t\t\t//document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\t\t\t//document.addEventListener( 'touchstart', onDocumentTouchStart, false );\n\t\t\t\t//document.addEventListener( 'touchmove', onDocumentTouchMove, false );\n\t\t\t\twindow.addEventListener( 'resize', this.onWindowResize, false );\n\t\t\t},\n\n\t\t\t//浏览器大小改变时重新渲染\n\t\t\tonWindowResize() {\n\t\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\t\twindowHalfY = window.innerHeight / 2;\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t},\n             animate() {\n\t\t\t\trequestAnimationFrame( this.animate );\n\t\t\t\tthis.render();\n\t\t\t},\n\n\t\t\t//将相机和场景渲染到页面上\n\t\t\trender() {\n\t\t\t\tvar i = 0;\n\t\t\t\t//更新粒子的位置和大小\n\t\t\t\tfor (var ix = 0; ix < AMOUNTX; ix++) {\n\t\t\t\t\tfor (var iy = 0; iy < AMOUNTY; iy++) {\n\t\t\t\t\t\tparticle = particles[i++];\n\t\t\t\t\t\t//更新粒子位置\n\t\t\t\t\t\tparticle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\n\t\t\t\t\t\t//更新粒子大小\n\t\t\t\t\t\tparticle.scale.x =  particle.scale.y = particle.scale.z  = ( (Math.sin((ix + count) * 0.3) + 1) * 4 + (Math.sin((iy + count) * 0.5) + 1) * 4 )*50;\t//正常情况下再放大100倍*1200\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trenderer.render( scene, camera );\n\t\t\t\tcount += 0.1;\n\t\t\t},\n            handleLogin() {\n                let data = {\n                    code: 200,\n                    msg:'登录成功',\n                    data:{\n                        userName:'admin'\n                    }\n                }\n                setToken('111')\n                setLocalStorage('operatorInfo',data);\n                // this.$router.push('/dashBoard/manage');\n                this.$router.push({\n                    path: '/manage',\n                    query: {\n                        // id: new Date().getTime()\n                    }\n                })\n                // return;\n                // this.$refs[\"ruleForm\"].validate(valid => {\n                //     if (valid) {\n                //         let params = {\n                //             userName: this.ruleForm.userName,\n                //             userPwd: this.ruleForm.password,\n                //         }\n\n                //         this.Login(params).then(res => {\n                //             this.loginMsg = '';\n                //              console.log('res'+res)\n                //            if(getLocalStorage('operatorInfo').code==200){\n                //                 this.$router.push({name: 'DashBoard'});\n                //            }else if(getLocalStorage('operatorInfo').code!=200){\n                //                 this.loginMsg = getLocalStorage('operatorInfo').msg;\n                //                 return;\n                //            }\n                //         }, error => {\n                //             console.log(error)\n                //             this.loginMsg = error.msg;\n                //         });\n                //     } else {\n                //         return false;\n                //     }\n                // });\n            },\n            handleOnRandom() {\n                this.rand += 1;\n            }\n        },\n        mounted() {\n            this.init();\t\t//初始化\n\t\t\tthis.animate();\t//动画效果\n        }\n    };\n</script>\n\n<style type=\"text/scss\" lang=\"scss\">\n    @import \"../styles/mixin\";\n    @import \"../styles/common\";\n\n\n    $dark_gray: #889aa4;\n    $light_gray: #eee;\n\n    .login-container {\n        @include relative;\n        margin: 0;\n        overflow: hidden;\n        background: linear-gradient(to bottom, #19778c, #095f88);\n        background-size:1400% 300%;\n        animation: dynamics 6s ease infinite;\n        -webkit-animation: dynamics 6s ease infinite;\n        -moz-animation: dynamics 6s ease infinite;\n        font-size: 14px;\n        color: #ffffff;\n        min-height: 700px;\n        height: 100%;\n\n        .login-header {\n            width: 100%;\n            height: 50%;\n            // background: url('../assets/login_bg.png') no-repeat center #fff;\n            background-size: 100% 100%;\n        }\n\n        .card-box {\n            @include fxied-center;\n            text-align: center;\n            width: 60%;\n            transform: translate(-50%, -57%);\n\n            h1 {\n                color: #f5f5f5;\n                margin-bottom: 20px;\n                text-shadow: 2px 2px 5px #0c0c0c;\n            }\n\n            .login-form {\n                padding: 51px 48px 48px 48px;\n                background: rgba(255, 255, 255, 0.2);\n                border-radius: 5px;\n                box-shadow: 1px 1px 3px #999;\n                width: 35%;\n                margin: 0 auto;\n            }\n\n            .login_msg {\n                background-color: #fef2f2;\n                color: #6C6C6C;\n                line-height: 16px;\n                padding: 6px 10px;\n                background: #fef2f2;\n                border: 1px solid #ffb4a8;\n                margin-bottom: 22px;\n                overflow: hidden;\n                text-align: left;\n                display: flex;\n\n                i {\n\n                    padding-right: 10px;\n                    color: #f40;\n                }\n\n                p {\n                    @include f_left;\n                    white-space: normal;\n                    word-wrap: break-word;\n                    padding: 0;\n                    margin: 0;\n                }\n            }\n        }\n\n        .item {\n            .el-form-item__content {\n                display: flex;\n                flex-flow: row;\n\n                .el-input__inner {\n                    color: #999;\n                }\n            }\n\n        }\n\n        .vCode {\n            display: flex;\n            flex-flow: row;\n            justify-content: space-between;\n\n            .item {\n                width: 60%;\n            }\n\n            #code {\n                display: block;\n                color: #ffffff;\n                font-size: 20px;\n                padding: 5px 35px 10px 35px;\n                margin-left: 5%;\n                height: 27px;\n                cursor: pointer;\n            }\n        }\n\n        input {\n            border: 0;\n            -webkit-appearance: none;\n            color: $light_gray;\n            height: 100%;\n        }\n\n        .el-input {\n            display: inline-block;\n        }\n\n        .tips {\n            font-size: 14px;\n            color: #fff;\n            margin-bottom: 0.13333rem;\n        }\n\n        .svg-container {\n            padding: 0.08rem 0.0666rem 0.08rem 0.2rem;\n            color: $dark_gray;\n            vertical-align: middle;\n            display: inline-block;\n\n            &_login {\n                font-size: 20px;\n            }\n        }\n\n        .title {\n            font-size: 26px;\n            color: $light_gray;\n            margin: 0 auto 0.5333rem auto;\n            text-align: center;\n            font-weight: bold;\n        }\n\n        .el-form-item {\n            border: 1px solid #cbcbcb;\n            background: #fff;\n            border-radius: 5px;\n            color: #9f9f9f;\n        }\n\n        .show-pwd {\n            position: absolute;\n            right: 0.1333rem;\n            top: 0.09333rem;\n            font-size: 16px;\n            color: $dark_gray;\n            cursor: pointer;\n        }\n\n        .login-footer {\n            position: absolute;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            height: 32px;\n            text-align: center;\n            color: #143992;\n            // background: url('../assets/login-ft.png') no-repeat center;\n        }\n\n        .SoftwareDownload{\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-start;\n            .SoftwareDownloadTitle{\n                margin-right: 10px;\n            }\n            .SoftwareDownloadClick{\n                flex: 1;\n                display: flex;\n                flex-direction: row;\n                justify-content: flex-start;\n\n            }\n            span{\n                color: $three-color;\n                margin-right: 8px;\n                cursor: pointer;\n            }\n            .line{\n                font-weight: 500;\n                color: black;\n            }\n        }\n    }\n</style>\n        "]}]}