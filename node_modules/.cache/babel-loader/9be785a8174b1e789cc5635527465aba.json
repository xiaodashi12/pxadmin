{"remainingRequest":"/Users/cjg/Vue/pxadmin/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/cjg/Vue/pxadmin/src/permission.js","dependencies":[{"path":"/Users/cjg/Vue/pxadmin/src/permission.js","mtime":1620529355127},{"path":"/Users/cjg/Vue/pxadmin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cjg/Vue/pxadmin/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport router from '@/router/router';\nimport store from '@/store/store';\nimport { Message } from 'element-ui';\nimport { getToken, getLocalStorage } from '@/utils/auth';\nimport NProgress from 'nprogress'; // Progress 进度条\n\nimport 'nprogress/nprogress.css'; // Progress 进度条样式\n\nvar whiteList = ['/login']; // 不重定向白名单\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start();\n\n  if (getToken()) {\n    if (to.path == '/login') {\n      next({\n        path: '/'\n      });\n      NProgress.done();\n    } else {\n      console.log(getLocalStorage('operatorInfo'));\n\n      if (Object.keys(getLocalStorage('operatorInfo')).length > 0) {\n        next();\n      } else {\n        store.dispatch('FedLogOut').then(function () {\n          next({\n            path: '/login'\n          });\n        });\n      }\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      next();\n    } else {\n      next('/login');\n      NProgress.done();\n    }\n  }\n\n  router.afterEach(function () {\n    NProgress.done(); // 结束Progress\n  });\n});",{"version":3,"sources":["/Users/cjg/Vue/pxadmin/src/permission.js"],"names":["router","store","Message","getToken","getLocalStorage","NProgress","whiteList","beforeEach","to","from","next","start","path","done","console","log","Object","keys","length","dispatch","then","indexOf","afterEach"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,QAAT,EAAkBC,eAAlB,QAAyC,cAAzC;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAgC;;AAEhC,IAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB,C,CAA6B;;AAC7BN,MAAM,CAACO,UAAP,CAAkB,UAAEC,EAAF,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AACnCL,EAAAA,SAAS,CAACM,KAAV;;AACA,MAAGR,QAAQ,EAAX,EAAc;AACV,QAAGK,EAAE,CAACI,IAAH,IAAW,QAAd,EAAuB;AACnBF,MAAAA,IAAI,CAAC;AAACE,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAJ;AACAP,MAAAA,SAAS,CAACQ,IAAV;AACH,KAHD,MAGK;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYX,eAAe,CAAC,cAAD,CAA3B;;AACA,UAAGY,MAAM,CAACC,IAAP,CAAYb,eAAe,CAAC,cAAD,CAA3B,EAA6Cc,MAA7C,GAAsD,CAAzD,EAA2D;AACvDR,QAAAA,IAAI;AACP,OAFD,MAEK;AACDT,QAAAA,KAAK,CAACkB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACnCV,UAAAA,IAAI,CAAC;AAAEE,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAJ;AACH,SAFD;AAGH;AACJ;AACJ,GAdD,MAcK;AACD,QAAIN,SAAS,CAACe,OAAV,CAAkBb,EAAE,CAACI,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACnCF,MAAAA,IAAI;AACP,KAFD,MAEO;AACHA,MAAAA,IAAI,CAAC,QAAD,CAAJ;AACAL,MAAAA,SAAS,CAACQ,IAAV;AACH;AACJ;;AAEDb,EAAAA,MAAM,CAACsB,SAAP,CAAiB,YAAM;AACnBjB,IAAAA,SAAS,CAACQ,IAAV,GADmB,CACF;AACpB,GAFD;AAGH,CA5BD","sourcesContent":["import router from '@/router/router'\nimport store from '@/store/store'\nimport { Message } from 'element-ui'\nimport { getToken,getLocalStorage } from '@/utils/auth'\nimport NProgress from 'nprogress' // Progress 进度条\nimport 'nprogress/nprogress.css'// Progress 进度条样式\n\nconst whiteList = ['/login'] // 不重定向白名单\nrouter.beforeEach(( to, from, next) => {\n    NProgress.start()\n    if(getToken()){\n        if(to.path == '/login'){\n            next({path:'/'})\n            NProgress.done();\n        }else{\n            console.log(getLocalStorage('operatorInfo'))\n            if(Object.keys(getLocalStorage('operatorInfo')).length > 0){\n                next()\n            }else{\n                store.dispatch('FedLogOut').then(() => {\n                    next({ path: '/login' })\n                })\n            }\n        }\n    }else{\n        if (whiteList.indexOf(to.path) !== -1) {\n            next()\n        } else {\n            next('/login')\n            NProgress.done()\n        }\n    }\n\n    router.afterEach(() => {\n        NProgress.done() // 结束Progress\n    })\n})"]}]}